import{_ as a,c as s,o as t,O as e}from"./chunks/framework.d7e37bdc.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"gbkToUtf8.md","filePath":"gbkToUtf8.md"}'),o={name:"gbkToUtf8.md"},l=e(`<h2 id="gbktoutf8" tabindex="-1">gbkToUtf8 🎉 💯 <a class="header-anchor" href="#gbktoutf8" aria-label="Permalink to &quot;gbkToUtf8 :tada: :100:&quot;">​</a></h2><p>gbk 转 utf-8</p><h4 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h4><ul><li><strong>value</strong> <code>ArrayBuffer</code> ArrayBuffer</li></ul><h4 id="td-ts" tabindex="-1">td.ts <a class="header-anchor" href="#td-ts" aria-label="Permalink to &quot;td.ts&quot;">​</a></h4><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>gbkToUtf8(value): object | string</code></p></div><h4 id="返回" tabindex="-1">返回 <a class="header-anchor" href="#返回" aria-label="Permalink to &quot;返回&quot;">​</a></h4><ul><li><code>object | string</code></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>可以被JSON.parse转化时返回js对象，否则返回字符串</p></div><h4 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-label="Permalink to &quot;实例&quot;">​</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://a.b.com/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">arrayBuffer</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#82AAFF;">gbkToUtf8</span><span style="color:#A6ACCD;">(res)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,11),n=[l];function r(c,p,i,d,u,h){return t(),s("div",null,n)}const f=a(o,[["render",r]]);export{b as __pageData,f as default};
