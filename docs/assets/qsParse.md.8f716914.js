import{_ as s,c as a,o as e,a as n}from"./app.dcbc92b9.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"qsParse \u{1F389} \u{1F4AF}","slug":"qsparse","link":"#qsparse","children":[]}],"relativePath":"qsParse.md"}'),l={name:"qsParse.md"},p=n(`<h2 id="qsparse" tabindex="-1">qsParse \u{1F389} \u{1F4AF} <a class="header-anchor" href="#qsparse" aria-hidden="true">#</a></h2><p>\u53C2\u6570\u5E8F\u5217\u5316-\u5B57\u7B26\u8F6C\u5BF9\u8C61</p><h4 id="\u53C2\u6570" tabindex="-1">\u53C2\u6570 <a class="header-anchor" href="#\u53C2\u6570" aria-hidden="true">#</a></h4><ul><li><strong>query</strong> <code>string = &#39;&#39;</code></li><li><strong>decode</strong> <code>boolean = true</code></li></ul><h4 id="td-ts" tabindex="-1">td.ts <a class="header-anchor" href="#td-ts" aria-hidden="true">#</a></h4><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>qsParse(query?: string, decode?: boolean): { \xA0\xA0\xA0\xA0[k: string]: any; }</code></p></div><h4 id="\u8FD4\u56DE" tabindex="-1">\u8FD4\u56DE <a class="header-anchor" href="#\u8FD4\u56DE" aria-hidden="true">#</a></h4><ul><li><code>\u6620\u5C04</code></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u7531\u53C2\u6570\u7EC4\u6210\u7684\u5BF9\u8C61</p></div><h4 id="\u5B9E\u4F8B" tabindex="-1">\u5B9E\u4F8B <a class="header-anchor" href="#\u5B9E\u4F8B" aria-hidden="true">#</a></h4><p>\u652F\u6301search\u548Chash\u4E2D\u53D6\u503C\uFF0C\u5982\u679Csearch\u548Chash\u4E2D\u6709\u76F8\u540C\u7684\u53C2\u6570\uFF0C\u5219\u9ED8\u8BA4\u4F7F\u7528search\u3002</p><p>\u4E0D\u4F20\u503C\u65F6\uFF0C\u9ED8\u8BA4\u4ECEwindow.location\u4E2D\u53D6\u503C</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">qsParse</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a=1&amp;b=2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;">// =&gt; &#39;a=1&amp;b=2&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">qsParse</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a=1&amp;b=2&amp;c={&quot;a&quot;:1}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;">// =&gt; { a:1, b:2, c: { a :1 } }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">qsParse</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a=1&amp;b=2&amp;c={&quot;a&quot;:1}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;">// =&gt; { a:1, b:2, c: &#39;{ a: 1 }&#39; }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,15),o=[p];function r(c,t,i,d,u,h){return e(),a("div",null,o)}const y=s(l,[["render",r]]);export{m as __pageData,y as default};
